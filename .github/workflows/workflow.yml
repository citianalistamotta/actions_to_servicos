name: Run Histórico

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"  # todo dia às 12h UTC

jobs:
  run-historico:
    runs-on: ubuntu-latest

    env:
      DB_SERVER: ${{ secrets.DB_SERVER }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Instalar ferramentas SQL
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg apt-transport-https
          curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/microsoft.gpg
          curl -fsSL https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> $GITHUB_ENV

      - name: Testar conexão com o banco
        run: |
          /opt/mssql-tools/bin/sqlcmd -S "${{ env.DB_SERVER }},${{ env.DB_PORT }}" -U "${{ env.DB_USER }}" -P "${{ env.DB_PASS }}" -Q "SELECT DB_NAME();"

      - name: Executar schema.sql (opcional)
        run: |
          if [ -f "schema.sql" ]; then
            echo "Executando schema.sql..."
            /opt/mssql-tools/bin/sqlcmd -S "${{ env.DB_SERVER }},${{ env.DB_PORT }}" -U "${{ env.DB_USER }}" -P "${{ env.DB_PASS }}" -d "${{ env.DB_NAME }}" -i schema.sql
          else
            echo "schema.sql não encontrado, pulando..."
          fi

      - name: Rodar seu código
        run: |
          pip install -r requirements.txt
          pip install pymssql
          python main.py
